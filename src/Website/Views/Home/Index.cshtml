@{
  ViewBag.Title = Strings.DashboardTitle;
}

@*<div class="jumbotron">
      <h1>ASP.NET</h1>
      <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
      <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
  </div>*@

<div class="row">
  <div class="col-xs-12 col-md-8 col-md-push-2">
    <table class="table table-striped table-condensed">
      <thead>
        <tr>
          <th></th>
          <th data-bind ="sort: { arr: rows, prop: 'timeIn'}">Time In</thdata-bind>
          <th data-bind="sort: { arr: rows, prop: 'name'}">Name</th>
          <th data-bind="sort: { arr: rows, prop: 'timeOutSort', default: true}">Time Out</th>
          <th data-bind="sort: { arr: rows, prop: 'hours'}" class=" text-right hidden-xs">Hours</th>
          <th data-bind="sort: { arr: rows, prop: 'miles'}" class=" text-right hidden-xs">Miles</th>
        </tr>
      </thead>
      <!-- ko if: (rows().length > 0) -->
      <tbody data-bind="foreachWithHighlight: { data: rows, duration: 3000}">
        <tr>
          <td class="roster" data-bind="css: state"></td>
          <td data-bind="text: timeIn.fromNow()"></td>
          <td><strong data-bind="text: name"></strong></td>
          <td data-bind="text: timeOutText"></td>
          <td class="text-right hidden-xs" data-bind="text: hours"></td>
          <td class="text-right hidden-xs" data-bind="text: miles"></td>
        </tr>
      </tbody>
      <!-- /ko -->
      <!-- ko if: (rows().length == 0) -->
      <tbody><tr><td colspan="5">No messages</td></tr></tbody>
      <!-- /ko -->
      <tfoot>
        <tr><th colspan="5"><span data-bind="text: rows().length"></span> responders</th></tr>
      </tfoot>
    </table>
  </div>
</div>

@section scripts {
  <script type="text/javascript">
    var PageModel = function () {
      var self = this;

      this.rows = ko.observableArray([]);

      var fixupRow = function(row)
      {
        row.timeIn = moment(row.timeIn);
        if (row.timeOut) { row.timeOut = moment(row.timeOut); }
        row.timeOutText = row.timeOut ? row.timeOut.fromNow() : '';
        row.timeOutSort = row.timeOut ? row.timeOut : moment(row.timeIn).add(100, 'years');
        return row;
      }

      this.load = function () {
        $.ajax(window.appRoot + 'api/roster')
        .done(function (data) {
          for (var i = 0; i < data.length; i++) {
            fixupRow(data[i]);
          }
          self.rows(data);
        });
      };
    }

    var model = new PageModel();
    model.load();
    $(document).ready(function () {
      ko.applyBindings(model);
    })
  </script>
}
